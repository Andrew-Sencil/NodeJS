Node.js Notes
-Node.js is a runtime environment that allows developers to create server-side 
applications using the same JavaScript language used for frontend development

Difference between common js and es modules

CommonJS                        vs                  ES modules
'require'/'exports'    importing and exporting     'import'/'export'
'Synchronous'              Module Loading          'Asynchronous'


Syntax:
exporting
CommonJS:                       ES modules:
module.exports = {              const post = [
  generateRandomNumber,             { id: 1, title: "Post one" },
  celciusToFahrenheit,              { id: 2, title: "Post two" }
};                              ];
                                export const getPosts = () => post;

importing:
CommonJS:
const { celciusToFahrenheit, generateRandomNumber } = require("./utils");

ES modules:
import { getPosts } from "./postController.js";

nodemon
-a package wherein it automatically refreshes the server after saving 

.env
- serves as a centralized location to store configuration settings for your project.
- file in a Node.js project is used to store environment variables in a key-value format. These environment variables are commonly
 used to configure an application without hardcoding sensitive or environment-specific data into the source code.

Common uses of .env files:
1. Storing Secrets:
  - API keys, database credentials, tokens, and other sensitive information.
2. Enviroment-Specific Configuration:
  - Different configurations for development, testing, and production environments.
3. Simplifying Deployment:
  - Centralized configuration management for server settings.

to access the .env file
first:
-you have to change the package.json script add --env-file=.env "start": "nodemon --env-file=.env server.js"
second: 
-you have to access the .env file from the server.js or file that contains the server. Use "process.env.PORT".
  Example: const PORT = process.env.PORT;

These two can be used only in ES module:
__filename 
- this will return the current filename with the path
__dirname
- this will return the curent path of the file that you are in

Middleware: 
- are modules or functions have access to the request and response object because 
it sit in the middle of incoming requests and outgoing responses.

- refers to a concept where functions can be used to process incoming requests 
before they reach their final destination and handle outgoing responses 
before they are sent back to the client.

-in a practical example, it is like a waiter in a restaurant where it 
sends the command of a customer(user) to the chef(DB).

Events Emitter - it is great for building a real-time applications, it is used to
create and handle custom events.

